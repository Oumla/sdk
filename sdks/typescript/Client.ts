// This file was auto-generated by Fern from our API Definition.

import * as environments from "./environments.js";
import * as core from "./core/index.js";
import { mergeHeaders } from "./core/headers.js";
import { Profiles } from "./api/resources/profiles/client/Client.js";
import { Wallets } from "./api/resources/wallets/client/Client.js";
import { Addresses } from "./api/resources/addresses/client/Client.js";
import { Transactions } from "./api/resources/transactions/client/Client.js";
import { Assets } from "./api/resources/assets/client/Client.js";
import { Withdrawals } from "./api/resources/withdrawals/client/Client.js";
import { ContractTemplates } from "./api/resources/contractTemplates/client/Client.js";
import { DeployedContracts } from "./api/resources/deployedContracts/client/Client.js";
import { ContractInteractions } from "./api/resources/contractInteractions/client/Client.js";
import { Tokenization } from "./api/resources/tokenization/client/Client.js";

export declare namespace OumlaSdkApiClient {
    export interface Options {
        environment?: core.Supplier<environments.OumlaSdkApiEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the x-sdk-version header */
        sdkVersion?: "1.0.0";
        /** Override the x-api-key header */
        apiKey: core.Supplier<string>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | null | undefined> | null | undefined>;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the x-sdk-version header */
        sdkVersion?: "1.0.0";
        /** Override the x-api-key header */
        apiKey?: string;
        /** Additional query string parameters to include in the request. */
        queryParams?: Record<string, unknown>;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | null | undefined> | null | undefined>;
    }
}

export class OumlaSdkApiClient {
    protected readonly _options: OumlaSdkApiClient.Options;
    protected _profiles: Profiles | undefined;
    protected _wallets: Wallets | undefined;
    protected _addresses: Addresses | undefined;
    protected _transactions: Transactions | undefined;
    protected _assets: Assets | undefined;
    protected _withdrawals: Withdrawals | undefined;
    protected _contractTemplates: ContractTemplates | undefined;
    protected _deployedContracts: DeployedContracts | undefined;
    protected _contractInteractions: ContractInteractions | undefined;
    protected _tokenization: Tokenization | undefined;

    constructor(_options: OumlaSdkApiClient.Options) {
        this._options = {
            ..._options,
            headers: mergeHeaders(
                {
                    "x-sdk-version": _options?.sdkVersion ?? "1.0.0",
                    "x-api-key": _options?.apiKey,
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version,
                },
                _options?.headers,
            ),
        };
    }

    public get profiles(): Profiles {
        return (this._profiles ??= new Profiles(this._options));
    }

    public get wallets(): Wallets {
        return (this._wallets ??= new Wallets(this._options));
    }

    public get addresses(): Addresses {
        return (this._addresses ??= new Addresses(this._options));
    }

    public get transactions(): Transactions {
        return (this._transactions ??= new Transactions(this._options));
    }

    public get assets(): Assets {
        return (this._assets ??= new Assets(this._options));
    }

    public get withdrawals(): Withdrawals {
        return (this._withdrawals ??= new Withdrawals(this._options));
    }

    public get contractTemplates(): ContractTemplates {
        return (this._contractTemplates ??= new ContractTemplates(this._options));
    }

    public get deployedContracts(): DeployedContracts {
        return (this._deployedContracts ??= new DeployedContracts(this._options));
    }

    public get contractInteractions(): ContractInteractions {
        return (this._contractInteractions ??= new ContractInteractions(this._options));
    }

    public get tokenization(): Tokenization {
        return (this._tokenization ??= new Tokenization(this._options));
    }
}
